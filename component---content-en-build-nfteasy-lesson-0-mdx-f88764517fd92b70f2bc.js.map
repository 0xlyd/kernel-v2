{"version":3,"sources":["webpack://kernel-community/./content/en/build/nfteasy/lesson-0.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InfoBlock","Box","Aligner","Button","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","center","to","isMDXComponent"],"mappings":"sQAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAYL,EAAc,aAC1BM,EAAMN,EAAc,OACpBO,EAAUP,EAAc,WACxBQ,EAASR,EAAc,UACvBS,EAAc,CAClBV,gBAEIW,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGX,GACF,YACD,OAAO,QAACQ,EAAD,iBAAeD,EAAiBP,EAAhC,CAAuCW,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,sBACN,MAAS,CACP,SAAY,aAHhB,uBAK0B,aAAGC,WAAW,KACpC,KAAQ,uBACR,aAAc,gCACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,0ZACA,iZACA,cACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAKkB,aAAGA,WAAW,KAC5B,KAAQ,eACR,aAAc,wBACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,mBACE,cAAIA,WAAW,MAAf,YAAgC,aAAGA,WAAW,KAC1C,KAAQ,iCADoB,OAAhC,MAEsB,aAAGA,WAAW,KAChC,KAAQ,yCADU,QAFtB,MAIuB,aAAGA,WAAW,KACjC,KAAQ,2DADW,QAJvB,SAM0B,aAAGA,WAAW,KACpC,KAAQ,qDADc,WAN1B,MASA,cAAIA,WAAW,OAAK,cAAIA,WAAW,MAAf,YAApB,+DAAwH,aAAGA,WAAW,KAClI,KAAQ,+CAD4G,qBAAxH,OAIF,QAACV,EAAD,CAAWS,QAAQ,cACjB,QAACR,EAAD,CAAKQ,QAAQ,QACX,kBAAG,kBAAQC,WAAW,KAAnB,uBACH,kBAAG,eAAKA,WAAW,IACf,IAAO,yCACP,IAAO,+BAEX,wGACA,QAACR,EAAD,CAASS,QAAM,EAACF,QAAQ,YACtB,QAACN,EAAD,CAAQS,GAAG,8CAA8CH,QAAQ,UAAjE,aAQVF,EAAWM,gBAAiB","file":"component---content-en-build-nfteasy-lesson-0-mdx-f88764517fd92b70f2bc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InfoBlock = makeShortcode(\"InfoBlock\");\nconst Box = makeShortcode(\"Box\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"long-life-libraries\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Long Life Libraries`}<a parentName=\"h1\" {...{\n        \"href\": \"#long-life-libraries\",\n        \"aria-label\": \"long life libraries permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <p>{`We’ll begin by looking carefully at the tools we’ll be using throughout this guild, because no builder can work meaningfully without their tools. In particular, we’ll consider the decentralized nature of Git, discuss the beauty and difficulties of Node and all of its millions of packages, and consider the hardhat which will be keeping us safe and the various tools which came before it.`}</p>\n    <p>{`However, real builders don’t just need tools: they need plans, blueprints, a vision and direction. For that, we turn to the other critical aspect of our craft: shared libraries. In particular, we’ll be looking at the OpenZeppelin ERC721 library and how we can use it with the help of hardhat. Depending on how this all goes, we may even mention mycelium. One never really knows. `}</p>\n    <h2 {...{\n      \"id\": \"preparation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Preparation`}<a parentName=\"h2\" {...{\n        \"href\": \"#preparation\",\n        \"aria-label\": \"preparation permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <ol>\n      <li parentName=\"ol\">{`Install `}<a parentName=\"li\" {...{\n          \"href\": \"https://git-scm.com/downloads\"\n        }}>{`Git`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org/dist/latest-v12.x/\"\n        }}>{`Node`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"https://classic.yarnpkg.com/en/docs/install/#mac-stable\"\n        }}>{`Yarn`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://hardhat.org/getting-started/#installation\"\n        }}>{`Hardhat`}</a>{`.`}</li>\n      <li parentName=\"ol\"><em parentName=\"li\">{`Optional`}</em>{`: burn your Windows machine in a cathartic fire ritual and `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=-1h4RNetLbg\"\n        }}>{`use Linux instead`}</a>{`.`}</li>\n    </ol>\n    <InfoBlock mdxType=\"InfoBlock\">\n      <Box mdxType=\"Box\">\n        <p><strong parentName=\"p\">{`Librarians Unite!`}</strong></p>\n        <p><img parentName=\"p\" {...{\n            \"src\": \"/images/build/LeibnizCombinatorics.gif\",\n            \"alt\": \"Of Leibniz and Libraries\"\n          }}></img></p>\n        <p>{`Each session in this build guild can be found on its own branch in the repo below:`}</p>\n        <Aligner center mdxType=\"Aligner\">\n          <Button to=\"https://github.com/kernel-community/nfteasy\" mdxType=\"Button\">Begin</Button>\n        </Aligner>\n      </Box>\n    </InfoBlock>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}