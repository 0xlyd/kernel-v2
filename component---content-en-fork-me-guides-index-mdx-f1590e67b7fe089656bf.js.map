{"version":3,"sources":["webpack://kernel-community/./content/en/fork-me/guides/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qPAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cACE,GAAM,6BACN,MAAS,CACP,SAAY,aAHhB,8BAKiC,aAAGC,WAAW,KAC3C,KAAQ,8BACR,aAAc,uCACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,wPAA0O,aAAGA,WAAW,IACpP,KAAQ,qBAD8N,WAA1O,6JAEiL,sBAAYA,WAAW,KAAvB,OAFjL,WAGA,kFAAoE,aAAGA,WAAW,IAC9E,KAAQ,6BADwD,UAApE,+PAIA,oIACA,cACE,GAAM,SACN,MAAS,CACP,SAAY,aAHhB,UAKa,aAAGA,WAAW,KACvB,KAAQ,UACR,aAAc,mBACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,0mBAEA,iDACA,cACE,GAAM,qBACN,MAAS,CACP,SAAY,aAHhB,uBAK0B,aAAGA,WAAW,KACpC,KAAQ,sBACR,aAAc,+BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,2DAA6C,sBAAYA,WAAW,KAAvB,MAA7C,4BAAuH,sBAAYA,WAAW,KAAvB,KAAvH,8BAAkM,sBAAYA,WAAW,KAAvB,KAAlM,uBAAsQ,sBAAYA,WAAW,KAAvB,UAAtQ,0WACA,sKAAwJ,sBAAYA,WAAW,KAAvB,OAAxJ,yLAKJJ,EAAWK,gBAAiB","file":"component---content-en-fork-me-guides-index-mdx-f1590e67b7fe089656bf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"crafting-technical-content\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Crafting Technical Content`}<a parentName=\"h1\" {...{\n        \"href\": \"#crafting-technical-content\",\n        \"aria-label\": \"crafting technical content permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <p>{`This section is not about writing, it's all about how to add automagic, ready-made React components to your files so that they really pop. The basics - buttons, Calls to Action (CTAs), images, headers - can be found inside the `}<a parentName=\"p\" {...{\n        \"href\": \"/fork-me/recipes/\"\n      }}>{`pallete`}</a>{`. Gradually, contributors progress to passing your own props to some of the more advanced components this site offers, all while remaining in a familiar `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` file.`}</p>\n    <p>{`All of this is possible thanks the framework this site uses: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/\"\n      }}>{`Gatsby`}</a>{`. We're able to leverage it's unique and modern features to build a fast, slick and easy-to-use structure that many different people, with very different skills, and at many levels of technical\nunderstanding can use, adapt, contribute to and extend.`}</p>\n    <p>{`Writing markdown which renders responsive React components is a superpower. We hope you'll use it responsibly.`}</p>\n    <h2 {...{\n      \"id\": \"basics\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Basics`}<a parentName=\"h2\" {...{\n        \"href\": \"#basics\",\n        \"aria-label\": \"basics permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`Not everyone wants to be a hardcore developer. Writing truly engaging content, that both delights and educates people, is an underrated talent and you shouldn't be required to learn all the intricacies of modern web frameworks just to produce awesome pages. In the past, the best you could have done would be to write content in your editor of choice, export it into markdown\nand then hope that some developer somewhere can incorporate it and add the styles, buttons, images and other visual features which are required to make content transformational, rather than just more boring information.`}</p>\n    <p>{`This site changes all that.`}</p>\n    <h2 {...{\n      \"id\": \"what-is-mdx-anyway\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`What is Mdx anyway?`}<a parentName=\"h2\" {...{\n        \"href\": \"#what-is-mdx-anyway\",\n        \"aria-label\": \"what is mdx anyway permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`In short: it's your normal markdown - `}<inlineCode parentName=\"p\">{`md`}</inlineCode>{` - with an added little `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` factor. In practice, the `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` means that we can `}<inlineCode parentName=\"p\">{`extend`}</inlineCode>{` the capabilities of markdown and, in fact, create entire React components directly in our content files. If you don't know what a React component is, or why you would want to have them in your content files, don't stress! This section is all about showing you how this is actually a writing superpower, and how you can put it to best use when contributing.`}</p>\n    <p>{`You might have used a markdown cheatsheet before to figure out how to handle headings, links, images, and other basic necessities. The beauty of `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` is that all that stuff still works exactly the same. You'll still be writing what appears - for the most part - to be normal markdown. It's just that we can now do so much more...`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}